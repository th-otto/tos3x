 			ATARI ST DEVELOPMENT PACKAGE
			----------------------------


	The ST development package consists of six disks. These disks
will enable a developer to compile and link "C" applications or desk 
accessories for the Atari ST series.

		1. TOS System Disk.
		2. Language disk.
		3. C-Compiler.
		4. Linker.
		5. Utilities.
		6. Resource Construction Set.

NOTE:	 Mince editor is available from MARK OF THE UNICORN, INC.

WARNING: It is recommended that the developer make BACKUP COPIES of these
	 disks and that he/she use the backups as backups ONLY. It is also 
	 sugested that the ST system disk be backed up as well!



	The following is a list of files, programs, and other information
that are included on these disks.


			THE TOS SYSTEM DISK:
			-------------------

TOS.IMG		GEM Desktop, AES, VDI, Gem DOS, and BIOS
DESK1.ACC	VT52 Terminal Emulator desk accessory.
DESK2.ACC	Control panel desk accessory.


NOTE:	In order to make a backup of the TOS System Disk you must copy the
	entire disk in order for the auto-booting to take place.


			THE LANGUAGE DISK:
			------------------

LOGO.PRG	LOGO interpretive language
LOGO.RSC	Resource file for LOGO
ANIMAL.LOG	Sample program demonstrating list processing and AI
KNOWN.LOG	Data for ANIMAL


			THE COMPILER DISK:
			------------------

CP68.PRG	Three pass "C" compiler.
C068.PRG
C168.PRG

AS68.PRG	68000 asembler.
AS68INIT
AS68SYMB.DAT

BATCH.TTP	ST batch processing program.
RM.PRG		ST delete file program.
WAIT.PRG	ST WAIT to return to desktop.

C.BAT		Batch input file.

	ST "include" files. These files when included within a "C" program 
enable the use of the AES and VDI predefined messages, object types, GEMDOS 
definitions etc.

DEFINE.H	Typical miscellaneous definitions. Ex. NIL, TRUE, EOS...
GEMBIND.H	Do-it-yourself GEM binding kit.
GEMDEFS.H	Common GEM definitions as defined in the AES programmers
		manual.	
VDIBIND.H	VDI external definitions.
TOSDEFS.H	TOS file attributes and error definitions.
OBDEFS.H	Common GEM OBJECT definitions as defines in the AES programmers
		manual.
OSBIND.H	"C" binding to GEMDOS, extended BIOS, and BIOS.
STDIO.H		"C" standard I/O file.

PORTAB.H	ST "include" files. For use in porting IBM applications to
MACHINE.H	the ST series.
TADDR.H



			THE LINKER DISK:
			----------------

LINK68.PRG	ST linker program.
RELMOD.PRG	ST relocation program.
BATCH.TTP	ST batch processing program.
RM.PRG		ST delete file program.
WAIT.PRG	ST WAIT to return to desktop.

LINKAP.BAT	Batch input files to link GEM application programs.
LINKACC.BAT	Batch input files to link GEM desk accessory programs.

ACCSTART.O	GEM accessory start file.
APSTART.O	GEM application start file.
GEMS.O		"C" run time library start file.
GEMSTART.O	"C", VDI, AES library start files.

AESBIND		AES run time library.
VDIBIND		VDI run time library.
GEMLIB		"C" run time library.
OSBIND.O	GEMDOS trap routine.
LIBF		Floating point library.



			THE UTILITIES DISK:
			-------------------

COMMAND.PRG	Command line interpreter.
DUMP.PRG	Hexadecimal file print utility.
FIND.PRG	File string locator utility.
HIGH.PRG	ST medium resolution program.
LOW.PRG		ST low resolution program
KERMIT.PRG	File transfer program.
NM68.PRG	Symbol table print utility.
SID.PRG		Symbolic Interactive Debugger
SIZE68.PRG	Program segment size utility.
APSTART.S	Source to application start routine.
ACCSTART.S	Source to desk accessory start routine.
GEMSTART.S	Source to  "C", VDI, AES start routine.
GEM.S		Source to  "C"-run-time library start routine.
ACSKEL.C	Example GEM desk accessory program.
APSKEL.C	Example GEM application program.
README.DOC	ST development package document (the one you are in).

AR68.PRG	Library creation utility. (Future release.)


		THE RESOURCE CONSTRUCTION:
		--------------------------

RCS.PRG		Resource construction set program.
RCS.RSC		File for RCS.
BASIC.RSC	Example resource #1.
BASIC.C		"C" Source produced by the resource construction set.
BASIC.DEF	Tree definition file produced by the RSC construction set.
BASIC.H		"C" include file produced ny the RSC construction set.
DOODLE.RSC	Example resource #2
DOODLE.C
DOODLE.DEF
DOODLE.H
DOODLE.PRG	Program to run data from example #2

	Do not attempt to modify the resource files for the example
programs until you have backed this disk up.



-------------------------------------------------------------------------------


			COMPILING A PROGRAM ON THE ST.
			------------------------------

	The three development disks have been arranged so that compiling and
linking on the ST is a very simple process. The following is an example on
how to compile and run the sample APSKEL.C program supplied on the compiler
disk.

WARNING:
	Remove the write protection tab from the compiler and linker
 disks before compiling and linking.

IMPORTANT NOTE:

	The following instructions apply to a dual drive system.  Some
developers will have a single drive system.  There may not be enough disk
space on a single drive system to compile, assemble, and link.  If a write
error occurs, remove all unnecessary files from the disk.  For a single drive
system, follow the alternative step --if required--in parenthesis.


 1)	After making backups of the three development disks copy APSKEL.C and
	ACSKEL.C to a newly formated disk. (For a single drive system move
	ONE of these files to the compiler disk.)
	
 2)	Place the compiler disk in drive A: and the disk containing APSKEL.C
	and ACSKEL.C in drive B:. (No disk required for drive B)

 3)	Select the BATCH.TTP program and open it.

 4)	Type "C B:APSKEL" ( "C APSKEL")   in the open application
	dialog box and select "OK". At this point the screen will
	turn white and the batch program will begin compiling the APSKEL.C 
	program. The compile is finished when the program askes for a
	carriage return. Hit carriage return to return to the desktop.

	(For a single drive system you must use a single disk copy to move 
	the APSKEL.O file from the compiler disk to the linker disk.  Drag 
	the icon to drive B and follow the directions on swapping disks.)

 5)	Replace the compiler disk with the linker disk and double click on
	the BATCH.TTP program. Type "APLINK b:APSKEL" (APLINK APSKEL) in the 
	open application dialog box and select "OK". The screen will turn
	white while the batch program links the proper files together. The 
	link is finished when the wait for carriage return prompt is 
	displayed. Hit the return key to return to the desktop.

 6)	Now just double click on the file APSKEL.PRG on drive B: (drive A:).
	The move, size, close, and full boxes are all active in this program.
	Selecting the close box returns you to the desktop.



	To compile and link the desk accessory ACSKEL.C program do the
following.


 1)	Follow the same procedure to compile and link the ACSKEL.C desk
	accessory that you moved to the new disk. Remember to use
	"LINKACC ACSKEL" when linking the desk accessory together.

 2)	Next rename the ACSKEL.PRG program to DESK3.ACC.  DESK1.ACC and 
	DESK2.ACC are the Control Panel and VT52 Emulator included on your 
	system disk.

 3)	The final step is to transfer the DESK3.ACC accessory you have just
	created to your system disk and reboot the system. (Rebooting the
	system installs the accessory under "DESK" on the menu bar of the
	desktop.

 4)	To run, move the mouse to DESK on the menu bar and click on "Sample
	Accessory". If you resize the window you will see disk icons and 
	other windows on the desktop. Selecting the close box will remove 
	the desk accessory.


	If you type C.BAT and APLINK.BAT you will be able to see the proper
order of instructions necessary to compile or link a program file. For more
information on compiling and linking please consult the ATARI ST developers 
manuals.



INCLUDE / LINK TABLE:
--------------------

	The following table represents the proper "include" files necessary
to link to different portions of the TOS operating system.


TOS OP SYSTEM		INCLUDE IN PROGRAM 		LINK TO...
-----------------------------------------------------------------------------
VDI			<define.h>*			VDIBIND library
			<vdibind.h>

AES			<define.h>*			AESBIND library
			<gemdefs.h>
			<obdefs.h>

GEMDOS			<define.h>*			OSBIND.O trap routine
BIOS			<osbind.h>
XBIOS

"C" library		<define.h>*			GEMLIB library

VDI			<define.h>*			VDIBIND library
AES			<vdibind.h>			AESBIND library
"C" library		<gemdefs.h>			GEMLIB library
			<obdefs.h>


* Include if necessary.

All of the above libraries can be mixed depending on the needs of the
developer.

ATTENTION:

TO CREATE A GEM APPLICATION:
---------------------------
	YOU MUST LINK TO APSTART.O AS THE FIRST FILE IN YOUR LINK STATEMENT.

TO CREATE A GEM DESK ACCESSORY:
------------------------------
	YOU MUST LINK TO ACCSTART.O AS THE FIRST FILE IN YOUR LINK STATEMENT.
		

"C" RUN TIME LIBRARY:
---------------------

	To link to the "C" run time library (GEMLIB) you must link to
	GEMS.O as the first file in your link statement and GEMLIB as the 
	last file. 

	NOTE: You may not link to AESBIND or VDIBIND when using GEMS.O.


	Using GEMSTART.O you MAY link to AESBIND or VDIBIND libraries and the
	"C" run time library.  You must link to GEMSTART.O as the first file 
	in your link statement and GEMLIB as the last file.
	
	EXAMPLE
	-------
	link68 [u,s] file.68k = gemstart,program,vdibind,aesbind,gemlib

	WARNING:

		GEMSTART is a new replacement for GEMS. We recommend the uses
		of GEMSTART rather than GEMS. If any problems occur, please
		contact Richard Frick at Atari Corp.

-------------------------------------------------------------------------------

			FURTHER PROGRAM INFORMATION
			---------------------------

BATCH PROCESSING ON THE ST:
---------------------------


BATCH.TTP   This is a batch program for the ST.  To use, you must
	    create a file with the extention .BAT.  (example C.BAT)

	    To execute the C.BAT file you must open BATCH.TTP
	    and enter "C PARM1" in the open application
	    dialog box.

	    Where C.BAT is defined as:

			cp68 %1.c %1.i
			c068 %1.i %1.1 %1.2 %1.3 -f
			rm %1.i
			c168 %1.1 %1.2 %1.s
			rm %1.1
			rm %1.2
			as68 -l -u %1.s
			rm %1.s		******** SEE RM.PRG   *****
			wait		******** SEE WAIT.PRG *****

	   PARM1 is the C file to compile. (B:PARM1 to compile files on drive
	   B:.) PARM1 is substituted for %1 in C.BAT. No file extension is 
	   needed -it is included in C.BAT) 

	   There is also a APLINK.BAT file which is defined as:

			link68 [u] %1.68k=apstart,%1,vdibind,aesbind
			relmod %1
			rm %1.68K
			wait

	    Again, to execute just open BATCH.TTP and type "APLINK APSKEL".

	    REMEMBER: The linker disk must contain link68.prg, rm.prg,
			  batch.prg, link.bat, and relmod.prg.



RM.PRG      This is a delete file program necessary for the BATCH.TTP program
	    so that files can be deleted from drive B:.

WAIT.PRG    This program waits for a carriage return before continuing.


RELMOD.PRG  Converts the output file from LO68 or LINK68 into a form
	    that is executable by GEMDOS. 

		The full form of the commandline is:

		RELMOD [-]inputfil[.68K] [outputfile[.PRG]] ...

		(stuff between brackets is optional)

	If the input file has no extension, ".68K" is automatically appended.
	If there is no output filename specified, the name of the input file
	(with a ".PRG" appended) is assumed.  If an output file IS specified,
	it has the default extension of ".PRG".

	If the input filename begins with a dash ('-'), the dash is ignored,
	except for the fact that it indicates an input filename.  (If that's
	confusing, don't worry -- read on).


	EXAMPLES
	--------

	RELMOD FOO
	    Will look for a file called "FOO.68K", and produce a file
	    called "FOO.PRG".

	RELMOD BAR -BAZ.ZIP
	    Will look for a file called "BAR.68K", and produce a file
	    called "BAR.PRG".  Similarly, it will look for "BAZ.ZIP" and
	    produce "BAZ.PRG".



MISCELLANEOUS:
--------------

ALLOCATING MORE STACK SPACE:
----------------------------

	Stack space for applications and desk accessories has been
preallocated to 1K.  We realize that for some application this may not be
enough stack room.  For this reason we have included the source files
APSTART.S and ACCSTART.S on the Utilities disk. You now can make appropriate
changes to these files to create the necessary environment for your
application or desk accessory.


SETTING UP YOUR MINCE.SWP FILE.
-------------------------------

	If you have purchased MINCE, a word processing program from Mark 
of the Unicorn Inc, you can configure the MINCE.SWP file for the ATARI ST
as follows:

	 1) Run the Mince configure program.

	 2) Would you like to change disks?	answer NO

	 3) Select #1. (Read defs from existing swap file)

	 4) Use these definitions now?		answer NO

	 5) Select #5 (Edit definitions?)

	 6) Select #1 (rows, columns)
	
	 7) Number of rows?			answer 25

	 8) Number of columns?			answer 80

	 9) Any Changes?			answer YES

	10) Select #4 (Home-and-clear)

	11) Does your terminal have a command to clear the entire
	    screen, leaving the cursor at "home" (the upper left
	    corner?)				answer YES

 	12) Ok what is it?			answer 1b 48 1b 4a

	13) Select #5 (Clear-to-eol)

	14) Does your terminal have a special command to clear from the
	    current cursor position to the end of the line?
						answer YES

	15) Okay, what is it?			answer 1b 4b

	16) Select #6 (Clear-to-eos)

	17) Does your terminal have a special command to clear from the 
	    current cursor position to the end of the screen?
						answer YES

	18) Okay, what is it?			answer 1b 4a

	19) Any changes?			answer NO

	20) Any changes? (BIOS)			answer NO

	20) Any changes? (Miscellaneous)	answer YES

	21) Select #3? (Default tab column width)

	22) Mince sets tab stops at regular...	answer 8

	23) Select #6 (Keyboard idle delay)

	24) The keyboard idle delay constant...	answer 600
	   (This setting will slow the swapping action down)

	25) Any changes? 			answer NO

	26) Select #6 (Test terminal defines)

	27) If your screen DOESNOT "looks write"?
	    					answer YES/NO
	    If no repeat procedure!!!!

	28) Select #7 (Install definitions?)
	
	29) Update exsisting swap file?		answer YES

	30) Select #8 (Exit to operating system)

	That's all folks!!!!



