;*******************************************************************************
;* Patchfile fÅr das deutsche TOS 2.06 V4.0 (TosPatch V2.9.2 erforderlich)
;*
;* Das Format dieser Datei kann man wohl den Zeilen selbst entnehmen.
;* Mit dem ";" beginnt eine Kommentarzeile (wer hÑtte es gedacht?), damit
;* kann man sehr schîn einzelne Patches auslassen. Die meisten Patches haben
;* jetzt jedoch eine Variable am Anfang, die bestimmt, ob der Patch eingebunden
;* wird oder nicht. ZusÑtzlich kann in einigen FÑllen mit dieser - oder auch
;* einer darauf folgenden Variablen - der Patch konfiguriert werden.
;*
;* Ich hoffe, daû durch dieses Patchprogramm das éndern des TOS nun endlich
;* auf geregelten Bahnen verlÑuft, denn jeder kann relativ einfach Patches
;* verîffentlichen und auch nicht so erfahrene User kînnen diese Åbernehmen.
;*
;* Wer eigene Patches hinzufÅgen will, sollte eine eigene Kennung wÑhlen,
;* und diese im folgenden Kopf eintragen. Patches von anderen NIEMALS Ñndern!
;* Vielleicht hat sich derjenige doch was dabei gedacht! Wenn doch, so ist
;* die énderung genau zu dokumentieren! Es muû herausgestellt werden, wie
;* der Patch vorher aussah und was geÑndert wurde.
;*
;* Nochwas zu Weitergabe: Es sollten nur die Patches aktiviert sein, die fÅr
;* JEDEN etwas bringen. Also NUR FEHLERKORREKTUREN. Alle "Verbesserungen" sind
;* besser zu deaktivieren. Wer sie will, kann sie immer noch Åbernehmen.
;*
;* Kennung: | Name des Urhebers bzw. desjenigen, der den Patch gesammelt hat
;* -------------------------------------------------------------------------
;*   MRF    | Markus Fritze, ‰-soft
;*  HUCKY   | ???
;*   TFR    | JÅrgen Meyer
;*   MH     | Markus Heiden
;*   TRK    | Tracker
;*   RB     | Ralf Biedermann
;*
;* Bei Fehlermeldungen und Erweiterungen bitte ich um eine Mitteilung an meine
;* InterNet-Adresse:
;*
;* Markus_Heiden@public.uni-hamburg.de
;*
;* Oder îffentlichen Messages in folgende Boxen: 
;* D-Box Hamburg (040)72910042
;* Turbo-Tron    (040)8901162
;*
;* TosPatch: Ω 1990    ‰-soft, Markus Fritze (MRF)
;*           Ω 1992-96 Markus Heiden (MH)
;*
;* Bitte wendet Euch nicht mehr an Markus Fritze, wenn Ihr Probleme habt,
;* sondern ausschlieûlich an mich (Markus Heiden) !!!

;*******************************************************************************
;* MH:
;* TOS-Daten festlegen.

.BASE   = E00000    ;TOS-ROM-Adresse (TOS 2.06: $E00000)
.LENGTH =  40000    ;TOS-LÑnge       (TOS 2.06:  $40000)
.WIDTH  =    .16    ;TOS-Breite      (TOS 2.06:     .16)

.NATION = .FRG      ;TOS-NationalitÑt

;*******************************************************************************
;* MRF:
;* Einleseformat des Patchprogramms

;------------------------------------------------------------------------------
_SWITCH .NATION

_CASE .FRG:
  <tos206de.img	; Original TOS 2.06 deutsch

_CASE .USA:
  <tos206us.img	; Original TOS 2.06 amerikanisch

_CASE .UK:
  <tos206uk.img	; Original TOS 2.06 british

_CASE .FRA:
  <tos206fr.img	; Original TOS 2.06 franzîsisch

_CASE .SPA:
  <tos206es.img	; Original TOS 2.06 spanish (gabs nie)

_CASE .ITA:
  <tos206it.img	; Original TOS 2.06 italienisch (gabs nie)

_CASE .SWF:
  <tos206sf.img	; Original TOS 2.06 Schweiz (franzîsisch)

_CASE .SWG:
  <tos206sg.img	; Original TOS 2.06 Schweiz (german)

_CASE .SWE:
  <tos206se.img	; Original TOS 2.06 Schwedish

_DEFAULT:
  _ERROR "unsupported country"

_ENDSWITCH

;<*                  ;read from ROM (.LENGTH must match TOS-Length).

=14.11.1991,.NATION ;Muss die Version vom 14.11.1991 sein und die
                    ;TOS-NationalitÑt muss stimmen! (sonst Message)

;*******************************************************************************
;* MRF:
;* Ausgabeformat des Patchprogramms:
;* >[Anzahl der TOS-Files] [Obere Ramgrenze des Rechners - .LENGTH]

;>1 01F80000 ;  16MB-TT-RAM / 1 File ;Im TT-Ram lÑuft das TOS schneller!
;>1 01780000 ;   8MB-TT-RAM / 1 File ;Dies ersetzt (fast) ROMRAM
;>1 01380000 ;   4MB-TT-RAM / 1 File ;oder Ñhnliche TOS-Beschleuniger!
;>1 003C0000 ;    4MB-ST-RAM / 1 File
;>1 002C0000 ;   3MB-ST-RAM / 1 File
;>1 00240000 ; 2,5MB-ST-RAM / 1 File
;>1 001C0000 ;   2MB-ST-RAM / 1 File ;Mit weniger als 2MB Speicher macht es
;>1 000C0000 ;   1MB-ST-RAM / 1 File ;kaum Sinn TOS 2.06 im Ram zu halten,
;>1 00040000 ; 0,5MB-ST-RAM / 1 File ;auûer vielleicht zum Testen derPatches.

>1         ; 1 nicht relozierte Datei   (TOS.IMG) erzeugen, z.B. fÅr ROMRAM.
;>2         ; 2 nicht relozierte Dateien (TOS.LO/HI) erzeugen.
;>4         ; 4 nicht relozierte Dateien (TOS.EE/EO/OE/OO) erzeugen.

;*******************************************************************************
;* MH:
;* Berechnen und Setzen der CRC-PrÅfsumme von TOS 2.06/3.06.
;* (Wichtig fÅr RAMRESET, da sonst bei jedem Hardreset das TOS aus
;* dem RAM entfernt wird. Beim ROM-TOS erscheint sonst die Message
;* 'CRC-error in chip X.', falls der Test nicht ausgeschaltet ist (s.u.).)

.CRC = 1

;*******************************************************************************

-patchfld       ;Dsetpath("PATCHFLD")
+relocs.fil

;*******************************************************************************
;* MH:
;* Reset-Befehl fÅr RAM-TOS auf Ñlteren ST's lîschen.

.KILL_RESET = 0     ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .KILL_RESET
 34 $4E,71
_ENDIF

;*******************************************************************************
;* MH:
;* 60Hz beim Start in Farbe (Original: $02 wÑre 50Hz)

.COLOR_60HZ = 0     ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .COLOR_60HZ
 AB $00
_ENDIF

;*******************************************************************************
;* MH:
;* Modifizierte Reset-Routine. HÑlt RAM-TOS 2.06 auch bei Hardreset (von
;* Tastatur) im RAM.
;*
;* >>> Achtung:  Nur fÅr RAM-TOS!

.RAMRESET = 0            ;1: RAMRESET einbinden, 0: RAMRESET nicht einbinden

_IF .RAMRESET
 AE ramres2.abs         ;kein Konfigurationstest, RAM-TOS nicht lîschen,
                         ;Speicher ab $100 lîschen.
                         ;Tastatur-Soft-Reset: Reset
                         ;Tastatur-Hard-Reset: CRC-Test/Speicher lîschen/Reset
                         ;Resetknopf         : CRC-Test/Reset
                         ;Falls beim CRC-Test ein Fehler auftritt,
                         ;wird das TOS aus dem Ram entfernt.

 101 $.WIDTH/8-1.B       ;Parameter fÅr die CRC-Berechnung setzen
 104 $(.LENGTH-.WIDTH/4)/(.WIDTH/8).L
 110 $((.WIDTH/8)!A!7)*200!O!5088.W
 13A $((.WIDTH/8)!A!7)*200!O!5088.W

 33C4 $CD,0A             ;Key-Hardreset auf eigene Routine umbiegen
                         ;---> MUSS GEéNDERT WERDEN
_ENDIF 

;*******************************************************************************
;* MRF: (angepasst von MH)
;* Speicher ab $100 initialisieren und nicht ab $400. Damit hat man neben den
;* Vektoren keinen Mist mehr im Ram.
;*
;* >>> Dieser Patch funktioniert nicht mit dem RAMRESET-Patch!

.MEM_INIT = 0       ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .MEM_INIT !A! (.RAMRESET = 0)
 1C2 $0100.W
_ENDIF

;*******************************************************************************
;* MRF: (angepasst von MH)
;* _shell_p wird beim RESET zurÅckgesetzt (wie es sich gehîrt)

.SHELL_P = 1        ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .SHELL_P
 202 $42,B8,04,F6,3E,7C,3D,E8,42,38,0A,02
_ENDIF

;*******************************************************************************
;* MH:
;* Anschalten von 16 Mhz und Cache auf Mega-STE's schon vor dem Booten.
;*
;* >>> Achtung: Nur fÅr Mega-STE's !!!

.MSTE_CACHE_ON = 0  ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .MSTE_CACHE_ON
 26C $56,F8,0A,03,00,38,00,03,8E,21,22,7C,00,00,CC,B2
 27C $30,7C,0A,04,42,58,B3,C8,66,FA
_ENDIF

;*******************************************************************************
;* TFR:
;* Setzt die Steprate der Laufwerke A: und B:
;* $00 = 6 ms   $01 = 12 ms   $02 = 2 ms   $03 = 3 ms
;* Adresse dieses Patches durch TRK

.SET_STEP  = 0      ;1: Patch einbinden, 0: Patch nicht einbinden
.STEP_RATE = 03     ;GewÅnschte Steprate hier eintragen.

_IF .SET_STEP
 338 $.STEP_RATE.W
_ENDIF

;*******************************************************************************
;* Harun Scheutzow: (implementiert von MH)
;* HD-Cookie installieren. Nicht fÅr Mega STE/TT !!!
;* Format: 0xkkkkkk / normal (Mega STE/TT): $01415443
;* kkkkkk: Kennung, wer den Cookie installiert hat.
;* x=0: normale Schreibdichte (DD 720kB/360kB) 
;* x=1: Hohe Schreibdichte (HD 1.44MB)
;* x=2: Extrahohe Schreibdichte (ED 2,88MB)
;* x>2: reserviert
;*
;* >>> Achtung: Nicht fÅr Mega STE / TT !

.SET_COOKIE = 0          ;1: Patch einbinden, 0: Patch nicht einbinden
.FDC_COOKIE = 01000000   ;FDC-Cookie-Wert, z.B. HD: 01000000 oder ED: 02000000.

_IF .SET_COOKIE
 _FILL 460,46E,$4E71.W
 476 $.FDC_COOKIE.L
_ENDIF

;*******************************************************************************
;* MH, Heiko Mîller:
;* Verringern der Zeitspanne, ab der - nach Systemstart - noch ein
;* PrÅfsummentest (ROM-Test) (.SET_TIME_CRC) oder ein RAM-Test (.SET_TIME_RAM)
;* ausgefÅhrt wird. ZusÑtzlich kann der RAM-Test, falls er aktiviert ist, auf
;* die Anzeige der Speicherkonfiguration und den Wartebalken beschrÑnkt werden
;* (.SKIP_RAM) oder der Wartebalken kann ganz Åbersprungen werden (.SKIP_WAIT).
;* Normalwert bei beiden Tests ist 80s (.BOOT_TIME)!


.SET_TIME_CRC = 0   ;1: Wartzeit fÅr PrÅsummentest Ñndern, 0: Zeit nicht Ñndern
.SET_TIME_RAM = 0   ;1: Wartzeit fÅr RAM-Test Ñndern, 0: Zeit nicht Ñndern
.BOOT_TIME    = .0  ;GewÅnschte Wartezeit (in s) hier eintragen.

.SKIP_WAIT    = 0   ;1: Wartebalken Åberspringen, 0: Wartebalken anzeigen
.SKIP_RAM     = 0   ;1: Nur RAM-Anzeige, 0: RAM-Test und Wartebalken

_IF .SET_TIME_CRC
 7EE  $.BOOT_TIME*.200.l
_ENDIF
_IF .SET_TIME_RAM
 97C  $.BOOT_TIME*.200.l
_ENDIF
_IF .SKIP_WAIT
 9A0  $60,00,01,42
_ENDIF
_IF .SKIP_RAM
 5F54 $60
_ENDIF

;*******************************************************************************
;* MH:
;* CRC-Routine des TOS evtl. anpassen (z.B. fÅr 512kB TOS 2.06).

7FC $(.LENGTH-.WIDTH/4)/(.WIDTH/8).L
802 $.WIDTH/8-1.W
80C $.WIDTH/8.W
81E $.LENGTH-.WIDTH/4.L
828 $.WIDTH/8.W

;*******************************************************************************
;* MH:
;* Boot-Device-Fehler beheben (siehe ST-Computer 1/90)

.BOOT_DEV = 1       ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .BOOT_DEV
 8EA $30
_ENDIF

;*******************************************************************************
;* MH:
;* Bootroutine fÅr die "C't-Billiglîsung". Diese Routine stammt von
;* Wolfgang Schînrath. Fragen (z.B. bei Problemen) bitte direkt an ihn:
;* Åber die MAUS MS (0251/80386), als NetMail Åber's FidoNet (2:507/203.7031),
;* oder Åber die Box ANDROMEDA (02381/460077 auch 2:507/203)

.CT_HD = 0          ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .CT_HD
 AE4  ct_hd1.abs   ;Checkt Bootsektor auf AusfÅhrbarkeit
 16F6 ct_hd2.abs   ;neue XBIOS-Routine fÅr Bootsektor lesen,
                    ;die Routine fÅr's Schreiben wurde entfernt!
_ENDIF

;*******************************************************************************
;* MH:
;* Stackpointer bei Autoexec korrigieren (siehe ST-Computer 1/90)

.STACK_POINTER = 1  ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .STACK_POINTER
 128E $DE,FC,00,0C,4A,40,66,68,3F,3C,00,07,2F,38,0A,10
_ENDIF

;*******************************************************************************
;* Gerd Trudow, Umsetzung & Adresse SV:
;* Ersetzt Die Atari-Bomben durch die ursprÅnglichen Atom-Pilze...

.PILZE = 0          ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .PILZE
 13B2 $07,C0,1F,F0,3B,F8,77,F4,B7,FA,BB,FA,DF,F6,66,FC ;Pilze
 ~    $32,88,02,80,04,40,04,40,05,40,05,20,09,20,09,20
_ELSE
 ;13B2 $06,00,29,00,00,80,48,40,11,F0,01,F0,07,FC,0F,FE ;Bomben
 ;~    $0D,FE,1F,FF,1F,EF,0F,EE,0F,DE,07,FC,03,F8,00,E0
_ENDIF

;*******************************************************************************
;* MRF: (angepasst von MH)
;* Die Megauhr kann NICHT mehr mit dem TOS verstellt werden. Dazu muû man nun
;* ein externes Stellprogramm aufrufen. Dies hat natÅrlich den Vorteil, daû
;* auch fremde Programme die Uhr nicht mehr verstellen kînnen (wenn die
;* - wie Åblich - das TOS verwenden).

.LOCK_CLOCK = 0     ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .LOCK_CLOCK
 1466 $1CA8+.BASE.L
_ENDIF

;*******************************************************************************
;* MH:
;* Der Blitter wird vom TOS verleugnet und nicht benutzt.

.IGNORE_BLITTER = 0 ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .IGNORE_BLITTER
 14B4 $70,00,4E,75
_ENDIF

;*******************************************************************************
;* MH:
;* Schnelle Druckerroutinen fÅr den Parallelport (Fastprint).
;* Ausgabe-, Eingabe- und Warteroutine werden ersetzt.
;* Entspricht FASTPRN.PRG von Ecki aus der c't.
;* ZusÑtzlich wird noch die Eingaberoutine ersetzt.

.FASTPRN = 1        ;1: FASTPRN einbinden, 0: FASTPRN nicht einbinden

_IF .FASTPRN
 2FA  $00E020A0.l   ;Warteroutine auf neue Routine
 F50  $00E02082.l   ;bconin-Vector auf neue Routine
 F70  $00E020A0.l   ;Warteroutine auf neue Routine

 2020 fastpr5.abs  ;(.172)

 2316 $61,00,20B2-~.W    ;Routine zum Strobe setzen hat sich verschoben...
_ENDIF

;*******************************************************************************
;* MRF: (angepasst von MH)
;* Druckertimeout setzen. Originalwert ist 30s. Minimalwert ist 5s!
;* Geht beim Atari-Laser in die Hose; da ich einen habe, hier Originalwert

.TIMEOUT = .30      ;Zeit kann hier geÑndert werden (in Sekunden)

_IF .FASTPRN
 203E
_ELSE
 2044
_ENDIF

! ~ , ~ + 2         ;Damit Zeit nicht reloziert wird
~ $.TIMEOUT * .200.L

;*******************************************************************************
;* TRK:
;* conterm setzen: Bit 2 gesetzt:Glocke bei CNTRL-G
;*                 Bit 1   ''   :Tastenwiederholung ein
;*                 Bit 0   ''   :Tastenklick ein

.SET_CONTERM = 0    ;1: Patch einbinden, 0: Patch nicht einbinden
.CONTERM     = %110 ;GewÅnschter Wert fÅr conterm, z.B. %110 fÅr Tastenklick aus.

_IF .SET_CONTERM
 22E3 $.CONTERM
_ENDIF

;*******************************************************************************
;* MH:
;* Verdoppelt die ZÑhlgeschwindigkeit des 200 Hz-Timers. Damit STonX korrekte
;* Zeiten mit dem 100 Hz-Timer simulieren kann.

.SIM_100HZ = 0      ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .SIM_100HZ
 36BC $54,B9,00,00,04,BA
_ENDIF

;*******************************************************************************
;* TRK:
;* Setzt den hdmode auf Null. Aus SEEKUP von Martin Osieka entnommen
;* Adresse dieses Patches durch TRK.
;* Der Patch Ñndert nur die Initialisierung mit drei.
;* Das Åbrige Verhalten bleibt.
;*
;* Kurzbeschreibung:
;* SEEKUP schaltet auf STs unter TOS 2.06 die Verdoppelung der
;* Seekrate aus (erkennbar am Seek-GerÑusch der Laufwerke)
;*
;* typedef struct {
;*   char cmdbit3;   /* $00 oder $08, wird zum Positionierkommando geodert
;*                      Kann mit Flopsrate() verÑndert/abgefragt werden    */
;*   char dummy;     /* nicht benutzt */
;*   short track;    /* Aktuelle Spur */
;*   short hdmode;   /* 0 oder 3, wird in Register $FF860E geschrieben
;*                      Dieses Register existiert auf STs nicht */
;*   short seekrate; /* hdmode=0: 0: 6ms, 1: 12ms, 2: 2ms, 3: 3ms
;*                      hdmode=3: 0,1: 12ms, 2,3: 6ms
;*                      Kann mit Flopsrate() verÑndert/abgefragt werden */
;* } dsb3S;
;*
;* Das TOS verwaltet die Informationen zu den Floppylaufwerken in DSBs.
;* Initialisiert werden die DSBs mit { 0, 0, 0xFF00, 3, _seekrate}, damit
;* ist auf STs defaultmaessig 6ms eingestellt. Die Trackpositionierroutine
;* schaltet im Fehlerfall <hdmode> um und macht daraufhin einen weiteren
;* Versuch. Die Formatierfunktion setzt <hdmode> abhaengig von der Anzahl
;* der Sektoren pro Spur. Besser waere es wohl, wenn das TOS bei jedem
;* erkannten Diskettenwechsel <hdmode> zunaechst auf 0 setzen wuerde.
;*
;* >>> Nicht fÅr MSTE / TT!

.SEEK_UP = 0        ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .SEEK_UP
 37E8 $0000.w
_ENDIF

.FLOP_TEST = 1      ;Im Floppy-Test Track 10 anstatt Track 1 ansteuern

;*******************************************************************************
;* MH:
;* Fast-Load-Bit fÅr schnelleres Laden (siehe ST-Computer 1/90).
;* Produziert Fehler bei einigen Laufwerken.

.FASTLOAD = 0       ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .FASTLOAD
 3EE3 $10
_ENDIF

;*******************************************************************************
;* RB:
;* Suche nach Laufwerk 'B' unterbinden -> schnelleres Booten
;*
;* >>> Achtung: Funktioniert nicht mit 2 Laufwerken!

.SKIP_B = 0         ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .SKIP_B
 5256 $0001.W
_ENDIF

;*******************************************************************************
;* Harun Scheutzow: (implementiert von MH)
;* Neue Bios-Routinen Getbpb und Rwabs mit ED-UnterstÅtzung:
;* - Es werden keine nicht erfolgten Diskettenwechsel mehr erkannt.
;* - Rwabs-Schreibroutinen zerstîren keine VDI-Zeichensatzinformationen mehr.
;* - Es auch kînnen Disketten mit nur einer FAT genutzt werden.

.ED_BIOS = 1        ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .ED_BIOS
 526A bios1.abs
 572C bios2.abs
_ENDIF

;*******************************************************************************
;* RB:
;* ausfÅhren des Bootsektors der Diskette verhindern
;* (Ist ja nicht ganz so radikal schon im bootdevice-Patch enthalten).

.KILL_BOOT = 0      ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .KILL_BOOT
 59AA $60
_ENDIF

;*******************************************************************************
;* MRF: (angepasst von MH)
;* Wenn _bootdev >= 2 (also Laufwerk C) ist, wird der Bootsektor der Diskette
;* nach einem Warmstart nicht mehr ausgefÅhrt. Bis zu TOS 1.4 war dies auch
;* so, aber seit TOS 1.4 wird der Bootsektor stets ausgefÅhrt. Dies kostet
;* bei einem RESET nicht nur Zeit, sondern hilft auch zur Verbreitung von
;* Bootsektor-Viren.

.NORM_BOOT = 1      ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .NORM_BOOT
 59AE $BE,78,04,46,6F,2E,70,01,3E,80,42,A7,3F,00,42,67
 59BE $42,A7,2F,38,04,C6,61,00,DE,5A
_ENDIF

;* In diesem Patch befindet sich ein Fehler. Es wird mit CMP.W $0446.W,D7
;* verglichen und dann mit BCC xxx verzweigt. Dies funktioniert aber nur
;* dann, wenn _bootdev auch = 2 ist. Hat man aber CBHD und bootet z.B.
;* von E: (also _bootdev = 4), dann wird trotzdem der Bootsektor von A:
;* ausgefuehrt. Was noch schlimmer ist, dass bei diesem Patch ueberhaupt
;* kein Booten mehr von A: oder B: moeglich ist, was bei manchen Spielen,
;* die durch einen Boot geladen werden, zu Probleme fuehren kann. Um
;* dies zu beheben, ist der fuenfte Wert in der ersten Reihe ($64 bzw.
;* 64) durch $6F bzw. 6F zu ersetzen.
;* Es wird dann mit BLE xxx verzweigt, wobei dann die Abfrage
;* auch das erfuellt, was man gerne moechte.
;*
;* 07.09.1990 The Frontier

;*******************************************************************************
;* MRF: (angepasst von MH)
;* VDI-Patch (neue v_opnvwk()-Routine, ersetzt VDIFIX)
;*
;* >>> Achtung: DirektÅbernahme aus TOS 1.04. Also: Erst testen!

.VDI_FIX = 0        ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .VDI_FIX        ;(.122)
 9FD0 vdi.abs
_ENDIF

;*******************************************************************************
;* Karsten Isakovic (implementiert durch MRF): (angepasst von MH)
;* Beseitigt den Fehler, der beim einen Mshrink(0)-Aufruf die Memory-Listen
;* zerstîrte.
;*
;* >>> Achtung: DirektÅbernahme aus TOS 1.04. Also: Erst testen!

.M_SHRINK = 0       ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .M_SHRINK
 14806 $2F,2E,00,0A,4E,B9,00,E1,49,98,58,8F,4E,71
_ENDIF

;*******************************************************************************
;* RB:
;* Grow- und shrinkboxen ausschalten.

.DRAW_BOXES = 0     ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .DRAW_BOXES
 2112C $4E,75
 21170 $4E,75
_ENDIF

;*******************************************************************************
;* MRF: (angepasst von MH)
;* Korrektes MSDOS-Format (Statt $EB nun $EB34904E als 1. Bytes im Bootsektor)

.MS_DOS = 0         ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .MS_DOS
 2695C $DE,FC,00,0C,2A,BC,EB,34,90,4E
_ENDIF

;*******************************************************************************
;* MH:
;* Cache fÅr alle Prozessoren >= 68020 aktivieren.
;*
;* >>> Achtung: Dieser Patch befindet sich noch in der Testphase!

.CACHE_0X0 = 0      ;020: Cache fÅr 68020, 030: Cache fÅr >= 68030,
                    ;  0: Cache nicht aktivieren
_IF .CACHE_0X0 <> 0
 2AD4A $.020.W
 2AD50 $64
 301DA $.020.W
 301E0 $65
 30458 $.020.W
 3045E $65
_ENDIF

;* Nur den Codecache abfragen. _MUSS_ bei Benutzung des obrigen Cache-Patches
;* mit einem 68020 (z.B. der PAK) gepatcht werden.

_IF .CACHE_0X0 = 020
 30490 $C0,BC,00,00,00,01,67,0A         ;nur fÅr Cache mit 68020
_ENDIF

;*******************************************************************************
;* MH:
;* Atari-Anfangsfuji ersetzen. Originalfuji ist atari.abs.

.FUJI = 0           ;0: Kein neues Fuji einbinden.
                    ;1: modifiziertes Atarifuji mit PAK/3-Schriftzug von SE.
                    ;2: 'Gib Dos keine Chance' von Reiner Rosin/TRK.
                    ;3: 'GeTuned' von Sven Spitzmacher.

_SWITCH .FUJI
_CASE 1: 325AE fuji\pak3.abs
_CASE 2: 325AE fuji\gib_dos.abs
_CASE 3: 325AE fuji\gt_tos.abs
_ENDSWITCH

;*******************************************************************************
;* MRF: (angepasst von MH)
;* Die Default-Keyboardtabelle (3 mal 128 Bytes fÅr die Scancodetabellen)
;* wurden von dem Multi-Acc JAMES entliehen (von: Pascal Fellerich,
;* 45 rue des Genàts, L-3482 Dudelange, Luxembourg).
;*
;* Folgende Keyboardtabellen sind vorhanden:
;* FÅr deutsche Tastaturen im Ordner FRG (Original: GERMAN.KBD):
;* AMERICAN.KBD, FRENCH.KBD, GERFRENC.KBD, GERMAN.KBD, HEXA.KBD, SWISSFR.KBD.
;* FÅr amerikanische Tastaturen im Ordner USA (Original: USA.KBD):
;* USA.KBD

.NEW_KBD = 0        ;1: Neue Keyboardtabelle einbinden, 0: Nichts einbinden

.KBD_TAB = 32BB6

_IF .NEW_KBD
 -keyboard                   ;Dsetpath("KEYBOARD")
 .KBD_TAB frg\german.kbd      ;Hier gewÅnschte Keyboardtabelle eintragen
 -..                          ;Dsetpath("..") (Ein Verzeichnis zurÅck)
_ENDIF

;*******************************************************************************
;* MRF: (angepasst von MH)
;* û in ein IBM-· wandeln. Damit wird kein Pesata, sondern ein Beta-"·"
;* ausgegeben. Dies sieht nun mal auf den meisten Nadeldruckern besser aus.
;* Dies wirkt natÅrlich nur bei Texten, welche mit dem gepachten TOS eingegeben
;* werden. In den alten steht ja noch das û drin.
;*
;* HUCKY: Macht Probleme bei Script... Deswegen als Kommentar

.NEW_SZ = 0         ;1: Patch einbinden, 0: Patch nicht einbinden

.KBD_TAB = 32BB6

_IF .NEW_SZ
 .KBD_TAB+00C $E1
 .KBD_TAB+10C $E1
_ENDIF


;*******************************************************************************
;* MH:
;* éndert den Papiervorschub bei der Hardcopy ab. Somit kann sowohl auf einem
;* NEC P6, wie auch weiterhin auf einem EPSON eine Hardcopy gemacht werden
;* (siehe ST-Computer 10/90).

.NEC_P6 = 0         ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .NEC_P6
 32DA5 $1B,41,07,FF
_ENDIF

;*******************************************************************************
;* HUCKY: (angepasst von MH)
;* Fontimages Ñndern (nur die Bit-Images!!!)
;* Tempus oder Stad-Fonts einbinden. Diese mÅssen jedoch zuerst
;* konvertiert werden.

.FONTS = 0          ;1: Fonts einbinden, 0: Keine Fonts einbinden

_IF .FONTS
 -fonts                            ;Dsetpath("FONTS")
 33086 6x6_font.abs                ;<<< 6x6 Font hier eintragen (1152 Bytes)
 33762 8x8_font.abs                ;<<< 8x8 Font hier eintragen (2048 Bytes)
 33F62 neu.abs                     ;<<< 8x16 Font hier eintrage (4096 Bytes)
 -..                               ;Dsetpath("..") (Ein Verzeichnis zurÅck)
_ENDIF

;* Der Zeichensatz NEU.ABS, der diesem Archiv beiliegt, wurde von
;* SkyVox erstellt. Danke

;*******************************************************************************
;* TRK:
;* Standardtastaturbelegung fÅr die Desktopfunktionen Ñndern
;* ASCII-Werte der Standardtastenbelegung (aus dem NEWDESK.INF Åbernommen)
;* Nicht belegte Tasten erhalten den Wert 00
;* Diese Tastenbelegung wurde von SkyVox 'entworfen'. Danke

.DESK_TAST = 0      ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .DESK_TAST
 362AA 'OISLVCWNAXFBT12340EH5678MRKDP.'
_ENDIF

;*******************************************************************************
;* HUCKY: (angepasst von MH)
;* Nun noch was, wenn man das Aussehen vom AES verÑndern will...
;*
;* >>> BESSER  : Gleich neue RSC-Files schaffen und einbinden (s.u.)!
;* >>> Dieser Patch funktioniert nicht mit dem RSC/NEWDESK-Patch!

.ICONS = 0          ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .ICONS
 -icons                            ;Dsetpath("ICONS")
 ;* die Images sind jeweils 128 Bytes (4 Byte / Zeile => 32 Zeilen) lang.
 3727C TOSFACES.IMG                ;Ausrufezeichen
 372FC                             ;Fragezeichen in form_alert()
 3737C                             ;Stopschild
 39E6E                             ;i-Image in der Infobox des Desktops
 ;* die folgenden Icons bestehen jeweils auf 256 Bytes. 128 Bytes Maske,
 ;* 128 Byte Image fÅr das Icon
 39EEE TOSICONS.IMG                ;Diskettenlaufwerk
 39FEE ORDNER.IMG                  ;Ordner
 3A0EE                             ;Papierkorb
 3A1EE PROGRAMM.IMG                ;Programm
 3A2EE DATEI.IMG                   ;Datei
 -..                               ;Dsetpath("..") (Ein Verzeichnis zurÅck)
_ENDIF

;*******************************************************************************
;* SV:
;* Eingabe eines individuellen Textes ins Info-MenÅ.
;* Hierzu kann der Text mittels ASCII-Code eingeben werden, darf dabei
;* jedoch nicht lÑnger als 29 Zeichen sein.
;*
;* >>> BESSER  : Gleich neue RSC-Files schaffen und einbinden (s.u.)!
;* >>> Dieser Patch funktioniert nicht mit dem RSC/NEWDESK-Patch!

.INFO_TXT = 0       ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .INFO_TXT
 3850E '-----------------------------'
_ENDIF

;*******************************************************************************
;* MRF: (angepasst von MH)
;* die Mausformen (Aufbau der Struktur gemÑû der AES-Funktion "graf_handle")
;*
;* >>> BESSER  : Gleich neue RSC-Files schaffen und einbinden (s.u.)!
;* >>> Dieser Patch funktioniert nicht mit dem RSC/NEWDESK-Patch!

.MOUSE = 0          ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .MOUSE
 -mform                            ;Dsetpath("MFORM")
 373FC mform0.abs                  ;ARROW
 37446 mform1.abs                  ;TEXT_CRSR
 37490 mform2.abs                  ;BUSY_BEE
 374DA mform3.abs                  ;POINT_HAND
 37524 mform4.abs                  ;FLAT_HAND
 3756E mform5.abs                  ;THIN_CROSS
 375B8 mform6.abs                  ;THICK_CROSS
 37602 mform7.abs                  ;OUTL_CROSS
 -..                               ;Dsetpath("..") (Ein Verzeichnis zurÅck)
_ENDIF

;*******************************************************************************
;* MH:
;* Das Default-NEWDESK.INF und die Resourcen zum Includen!!!

.RSC = 0            ;1: RSC-Patch einbinden, 0: RSC-Patch nicht einbinden

+newrsc.fil

;***************************************************************************
;* EWK: 
;* HD-Floppy-Steuerung mit Sound-Chip-Bit 6 oder 7.
;* Erwartet die HD-Steuerung Low-Pegel bei HD-Betrieb, .HD_INVERT
;* auf 1 setzen, sonst kommt Hight-Pegel fÅr HD.

.HD_BIT    = 0      ;0: nicht einbinden, 6: Bit 6 verwenden, 7: Bit 7 verwenden
.HD_INVERT = 0      ;0: HD aktiv bei High-Pegel, 1: HD aktiv bei Low-Pegel

_IF .HD_BIT <> 0
 .HD_PORT: ~ hd_bit7.abs                         ;LÑnge 64 Bytes

 _IF .HD_BIT = 6
  .HD_PORT+21  |$BF
  .HD_PORT+2A  |$ED
 _ENDIF

 _IF .HD_INVERT
  .HD_PORT+29  |$01  ;fÅr HD aktiv bei Low-Pegel
 _ENDIF

 3A4C          |$4A,38,0A,03,66,06,4E,B9,.HD_PORT+0A+.BASE.L;Call an .HD_PORT+A
 3F00          |$4A,38,0A,03,66,06,4E,B9,.HD_PORT+0A+.BASE.L     
 3F60          |$4E,B9,.HD_PORT+.BASE.L                     ;Call an .HD_PORT

 !.HD_PORT.. ~      ;In diesem Patch nicht relozieren
_ENDIF

;*******************************************************************************
;* MRF: (angepasst von MH)
;* Harddisk-Waiter (zum gleichzeitigen Anschalten von Rechner und Platte)
;* Leider ist mir unbekannt, von wem diese Routine stammt, ich habe sie in
;* einem Bootsektor gefunden. Zudem kann man das Warten mit [ALTERNATE]
;* abbrechen (wenn z.B. keine Platte vorhanden ist).
;*
;* >>> Achtung: Der Harddisk-Waiter funktioniert nur mit einer Platte. Zudem
;*              bin ich nur sicher, daû er mit meiner Megafile 60 funktioniert.

.HD_WAIT0 = 0       ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .HD_WAIT0
 .HD_WAIT:      ~ hdwait.abs                ;LÑnge 222 Bytes
 !.HD_WAIT+8 .. ~                            ;in diesem Patch nicht relozieren

 72E            |$4E,B9,.HD_WAIT+.BASE.L     ;Jsr zum Harddisk-Waiter
 734            |$4E,71,4E,71                ;NOP's
_ENDIF

;*******************************************************************************
;* MRF: (angepasst von MH)
;* Alternativer Hardisk-Waiter. Wartet 12s bei einem Kaltstart auf die Platte
;* Dies funktioniert mit allen Platten! Mit Tastendruck kann das Warten
;* abgebrochen werden.
;* Fast gleichwertig zu diesem Patch ist, wenn man in den Patch, der die
;* Zeitspanne festlegt, ab der Systemstart noch die Tests ausgefÅhrt
;* werden, die entsprechende Zeit eintrÑgt.

.HD_WAIT1 = 0       ;1: Patch  einbinden, 0: Patch nicht einbinden
.TIME     = .12     ;Wartezeit in s (max. 327s !!!).

_IF .HD_WAIT1
 .HD_WAIT:      ~ hdwait1.abs               ;LÑnge 60 Bytes
 !.HD_WAIT+8 .. ~                            ;in diesem Patch nicht relozieren
 .HD_WAIT+A     |$.TIME*.200.W               ;Wartezeit eintragen

 72E            |$4E,B9,.HD_WAIT+.BASE.L     ;Jsr zum Harddisk-Waiter
 734            |$4E,71,4E,71                ;NOP's
_ENDIF

;*******************************************************************************
;* MH:
;* Hardisk-Waiter von EWK

.HD_WAIT2 = 0       ;1: Patch  einbinden, 0: Patch nicht einbinden
.TIME = .30         ;max. Wartezeit in s (max. 99s !!!)
.DEVICE = 0         ;DMA-Device, auf das gewartet werden soll (0-7)

_IF .HD_WAIT2
 .HD_WAIT:      ~ hdwait2.abs               ;LÑnge 350 Bytes
 !.HD_WAIT+8 .. ~                            ;in diesem Patch nicht relozieren

 .HD_WAIT+E     |$4E,71                      ;Nur fÅr RAM-TOS und >=2 Harddisks

 .HD_WAIT+1F    |$.TIME.B                    ;Wartezeit eintragen
 .HD_WAIT+86    |$.DEVICE*20.W               ;Device eintragen
 .HD_WAIT+92    |$.DEVICE*20.W
 .HD_WAIT+10A   |$.DEVICE+30.B

 72E            |$4E,B9,.HD_WAIT+.BASE.L     ;Jsr zum Harddisk-Waiter
 734            |$4E,71,4E,71                ;Rest mit NOP's auffÅllen
_ENDIF

;*******************************************************************************
;* Gerhard Huber: (implementiert von MH)
;* NovaPatch. Ansteurung der Novakarten schon beim Booten.
;* FÅr alle Nova ausser Typ 2 und 6.

.NOVA = 0           ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .NOVA
 .NOVA:      ~ nova.abs                ;NovaPatch einbinden
 !.NOVA+8 .. ~                          ;Im Patch nicht relozieren

 768         |$4E,F9,NOVA+8.L           ;Einsprung zum NovaPatch
_ENDIF

;*******************************************************************************
;* MH:
;* Abbruch bei öberschreiten der TOS-LÑnge.

_IF ~ > .LENGTH-.WIDTH/4
_ERROR 'Patches lÑnger als das TOS'
_ENDIF

;*******************************************************************************
;* Martin Osieka: (implementiert durch MH)
;* Puffer fÅr NEWDESK.INF vergrîûern. Originalroutinen aus SHBUF 1.3!
;* Zu nÑheren Informationen siehe SHBUF.

.SHBUF  = 0         ;1: Patch einbinden, 0: Patch nicht einbinden

.BUFFER = 7FFE      ;In diese Zeile kann die gewÅnschte Puffergrîûe
                    ;eingetragen werden. Maximum ist $7FFE => 32kB pro Puffer.
                    ;Da es 2 Puffer gibt => max. 64kB Speicherverbrauch
                    ;'Originalwert' ist $1000.

_IF .SHBUF
 +shbuf.fil        ;SHBUF-Patch einbinden
_ENDIF

;*******************************************************************************
;* Martin Osieka: (implementiert durch MH)
;* Neue Fensterverwaltung. Originalroutinen aus WINX 2.2!
;* EnthÑlt auûerdem den Arrowfix-Patch (s.u.).
;* Zu nÑheren Informaionen siehe WINX.
;*
;* Defaultwerte sind:
;* .GLOBAL = %1111111111111, .LOCAL = %111111111111, .DESKTOP = %111111111111,
;* .INIT_SCROLL = .460, .CONT_SCROLL = .40, CONT_CLOSE = .1000,
;* .CONT_FULL = .2000
;*
;* >>> Funktioniert nicht zusammen mit dem Arrowfix-Patch!

.WINX        = 1    ;1: Patch einbinden, 0: Patch nicht einbinden

_IF .WINX

 .GLOBAL      = %1111111111111 ; global flags (rightmost: flag G1)
 .LOCAL       =  %111111111111 ; local flags  (rightmost: flag L1)
 .DESKTOP     =  %111111111111 ; desktop flags (rightmost: flag D1)
 .INIT_SCROLL =           .460 ; Initial scroll delay in ms
 .CONT_SCROLL =            .40 ; Continous scroll delay in ms
 .CONT_CLOSE  =          .1000 ; Continous close delay in ms
 .CONT_FULL   =          .2000 ; Continous full delay in ms

 +winx.fil         ;WINX-Patch einbinden
_ENDIF

;*******************************************************************************
;* Martin Osieka: (implementiert von MH)
;* Neue Scrollroutinen fÅr GEM. Originalroutinen aus ARROWFIX 1.5!
;* Zu nÑheren Informationen siehe ARROWFIX.
;*
;* In .TIME steht die Default-Ansprechzeit bis zur ersten Wiederholung einer
;* Scrollnachricht in 0,125s. Diese Ansprechzeit lÑût sich auch mit dem
;* ARROWFIX.CPX einstellen. Werte von 0 bis 9 fÅr .TIME sind zulÑssig.
;* Original-Default ist .TIME = 3.
;*
;* >>> Funktioniert nicht mit dem Winx-Patch!

.ARROWFIX = 1       ;1: Patch einbinden, 0: Patch nicht einbinden

.TIME = 3           ;Ansprechzeit in 0,125s.

_IF .ARROWFIX !A! (.WINX = 0)
 +arrowfix.fil        ;ARROWFIX-Patch einbinden
_ENDIF

;*******************************************************************************
;* Ende der Datei...

-..            ;Dsetpath("..") (Ein Verzeichnis zurÅck)

