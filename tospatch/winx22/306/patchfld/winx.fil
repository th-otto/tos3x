;***************************************************************************
;* Martin Osieka: (implementiert durch MH)
;* Der WINX-Patch erlaubt mehr Fenster als je zuvor !!!

; 306-206: 3A66

.WX_VERSION = 220
.WX_DATE    = 1B51 ; 1993/10/17

.WX_QUEUE_SIZE = 500
.WX_QUEUE_OFFSET = 90 ; offsetof(struct PD, p_qaddr)
.WX_MAXWIN = .40

.WINXXIF  = 1AD0A+.d1
.WINXHCTL = 1B1B4+.d1
.WINXFORK = 1B8EA+.d1
.WINXEMSG = 1BDC8+.d1
.WINXDOWN = 1E938+.d1
.WINXFAPD = 1FE68+.d1
.WINXNAME = 1FFDE+.d1
.WINXWM   = 211CC+.d1
.WXFILL   = 25AA2+.d1
.WINXTICK = 262FA+.d1
.WINXSCRL = 2E44E+.d1
.WINXBOTM = 2EC72+.d1
.WINXREDR = 2EFAC+.d1
.WINXMISC = 34C12+.d2
.WINXTOP  = 354C4+.d2
.WINXXYFX = 35BA0+.d2
.WINXCOL  = 35DC0+.d2
.WINXTAB  = 3E18A+.d3

.rd_mymsg       = 19ABC+.d1+.BASE
.ap_rdwr        = 19AFE+.d1+.BASE
.crysbind       = 1A2D2+.d1+.BASE
.ev_mchk        = 1BE2A+.d1+.BASE
.ob_find        = 23B52+.d1+.BASE
.ldiv           = 2575C+.d1+.BASE
.dsptch         = 258AA+.d1+.BASE
.gr_stilldn     = 24D8C+.d1+.BASE
.gr_dragbox     = 24EEE+.d1+.BASE
.gr_slidebox    = 24FC0+.d1+.BASE
.gsx_ncode      = 2508A+.d1+.BASE
.gsx_mret       = 25074+.d1+.BASE
.inside         = 25CC2+.d1+.BASE
.rc_intersect   = 25D0E+.d1+.BASE
.rc_union       = 25D78+.d1+.BASE
.mice_state     = 2F85A+.d1+.BASE
.ob_add         = 23C82+.d1+.BASE
.ob_actxywh     = 23FEA+.d1+.BASE
.gsx_sclip      = 24400+.d1+.BASE
.gsx_moff       = 25350+.d1+.BASE
.gsx_mon        = 2536C+.d1+.BASE
.ob_draw        = 23AB2+.d1+.BASE
.bb_screen      = 2467C+.d1+.BASE
.ct_chgown      = 1B67A+.d1+.BASE
.gsx_start      = 246EA+.d1+.BASE
.tak_flag       = 1C260+.d1+.BASE
.ev_block       = 1BD12+.d1+.BASE
.take_ownership = 1B846+.d1+.BASE
.unsync         = 1C2D6+.d1+.BASE
.gr_setup       = 24E4A+.d1+.BASE
.gr_wait        = 24E0A+.d1+.BASE
.merge_str      = 26058+.d1+.BASE
.fm_alert       = 1C6C8+.d1+.BASE
.putmouse       = 2634e+.d1+.BASE
.getmouse       = 26330+.d1+.BASE
.gsx_xmfset     = 1E572+.d1+.BASE

.srl_row        = 34AFE+.d2+.BASE
.srl_col        = 34BA6+.d2+.BASE
.get_win        = 35816+.d2+.BASE
.do_redraw      = 35A68+.d2+.BASE
.wind_update    = 35F6A+.d2+.BASE
.appl_write     = 35C92+.d2+.BASE
.wind_get       = 35F92+.d2+.BASE
.wind_set       = 35FAC+.d2+.BASE

; static BSS
.shifty         = 10BB
.gl_dcindex     = 8f28
.gl_ticktime    = 9024
.TICKS          = 8BD2
.appl_msg       = 94B6
.button         = E6FA
.rlr            = E54A
.gl_mowner      = 950A
.gl_dclick      = 8EDA
.ad_stdesk      = 8F4E
.thedesk        = 0000
.D              = AEA2
.gl_newdesk     = 9156
.gl_newroot     = 94D8
.gl_wtop        = 95D6
.gl_rfull       = 94A2
.gl_kowner      = 94FE
.gl_fake        = 0000
.rul            = E552
.gl_bpend       = 8F84
.gl_pglue       = 949A
.gl_rscreen     = 94AC
.gl_awind       = 9214
.w_walkflag     = 913A
.wind_msg       = 94EE
.gl_ws          = A6B2
.gl_rzero       = 95A4
.ctl_pd         = E5C4
.gl_wbox        = 9504
.gl_hbox        = 92D4
.ad_windspb     = 8F7E
.xrat           = 8DB0
.gl_mntree      = 9506
.ml_ocnt        = 94C6
.intin          = AB98
.winhead        = 914C
.s_stofit       = 95AE
.ml_pmown       = 83BE
.ml_pkown       = 83C2
.fpcnt          = A6A8
.fpt            = E544

.g_loc2         = 1E5C ; BUG: this is inside g_olist, but correct offset for 2.06; should be 2824

;
; in ap_exit(), change parameter in call to ap_rdwr
;
19A88+.d1 $2E,A8,.WX_QUEUE_OFFSET.W,4E,71        ;move.l p_qaddr(a0),(a7); nop

;
; in iasync, change mouse rectangle check to call to ev_mchk()
; (same as for ARROWFIX)
;
1A040+.d1 $4E,B9,.ev_mchk.L         ;jsr ev_mchk
~         $50,8F                    ;addq.l #8,a7
~         $4A,40                    ;tst.w d0
~         $4E,71,4E,71,4E,71,4E,71
~         $4E,71,4E,71,4E,71,4E,71
~         $4E,71,4E,71


;
; optimize xif(), to make room for appl_getinfo() check
;
.WINXXIF
+winxxif.fil              ;1AD0A - 1ADAA (A0)

;
; replace ct_msg() & hctl_window()
;
.WINXHCTL            ;1B1B4 - 1B522 (36E)
+winxhctl.fil

; remove call to post_button() in ct_chgown()
1B6BA+.d1 $4E,71,4E,71,4E,71,4E,71
~         $4E,71,4E,71,4E,71,4E,71
~         $4E,71,4E,71,4E,71,4E,71

; ctlmgr(): new address for w_setactive()
1B702+.d1 $4E,B9,.WINXWM+.BASE+98E.L      ;jsr $E21B5A

; ctlmgr(): change parameter for ev_multi()
1B70E+.d1 $2F,3C,01,02,03,00        ;move.l #$01020300,-(a7)

; ctlmgr(): new address for hctl_button()
1B746+.d1 $61,00,.hctl_button-~.W   ;bsr $E1B1F8

; ctlmouse(): new address for getmouse()
1B7AE+.d1 $61,00,.WINXWM+.BASE+1A38-~.W   ;bsr $E22C04

; take_ownership(): mouse owner is also keyboard owner
1B890+.d1 $23,F9,.gl_mowner.L,.ml_pkown.L ; move.l gl_mowner,ml_pkown

; disable interrupts in forkq()
.WINXFORK
+winxfork.fil
.WINXFORK+388 $4E,71,4E,71,4E,71        ;nop

;
; replace ev_mesag() (same as for ARROWFIX)
;
.WINXEMSG
+winxemsg.fil            ;1BDC8 - 1BDFC (34)

; call wx_timchk() from WINXMISC.FIL in ev_multi()
1BFB6+.d1 $4E,B9,.WINXMISC+.BASE+186.L ;jsr $E34D98
~         $08,07,00,04              ;btst #4,d7
~         $67,2C                    ;beq $E1BFEE

; amutex(): call wx_evinsert() from WINXMISC.FIL
1C2BC+.d1 $4E,B9,.WINXMISC+.BASE+170.L ;jsr $E34D82

; fm_alert(): change parameter for ctlmouse()
1C848+.d1 $3E,BC,00,02              ;move.w #2,(a7)

; fm_dial(): new address for w_drawdesk()
1CD22+.d1 $61,00,.WINXWM+658-~.W    ;bsr $E21824
~         $60,00,00,10              ;bra.w $E1CD38

; gem_main(): new address for wm_init()
1E084+.d1 $4E,B9,.WINXWM+.BASE+F86.L      ;jsr $E22152

; mowner(): call helper function wx_owner() for additional checks
1E70E+.d1 $4E,B9,.WINXWM+.BASE+152C.L     ;jsr $E226F8

; mowner(): new address for wm_find() & call helper function wx_srchwp()
1E766+.d1 $4E,B9,.WINXWM+.BASE+13D2.L     ;jsr $E2259E
~         $54,8F                    ;addq.l #2,a7
~         $61,00,.WINXWM+EBE-~.W    ;bsr $E2208A
~         $60,00,00,1E              ;bra.w $E1E792

;
; optimized version of downorup(), used to patch a call in iasync()
; (same as for ARROWFIX)
;
.WINXDOWN
+winxdown.fil            ;1E938 - 1E974 (3C)

; mn_do(): change parameter for ctlmouse()
1EDF6+.d1 $3E,BC,00,02              ;move.w #2,(a7)

; mn_clsda(): new address for ap_sendmsg()
1F298+.d1 $4E,B9,.WINXWM+.BASE+12.L       ;jsr $E211DE ; ap_sendmsg

; fapd(): change access to appl specific message buffer
.WINXFAPD
+winxfapd.fil            ;1FE68 - 1FEB8 (50)

;p_nameit: optimized version to insert call to wx_nameit()
.WINXNAME
+winxname.fil            ;1FFDE - 2000A (2C)

; doq: change access to appl specific message buffer
200A2+.d1 $26,6B,.WX_QUEUE_OFFSET.W ;movea.l p_qaddr(a3),a3
~         $D6,C0                    ;adda.w d0,a3
~         $4E,71,4E,71              ;nop
200C4+.d1 $28,6C,.WX_QUEUE_OFFSET.W ;movea.l p_qaddr(a4),a4
~         $D8,C6                    ;adda.w d6,a4
~         $4E,71                    ;nop

; doq: insert call to wx_rmerge
200DC+.d1 $61,00,.WINXWM+191E-~.W   ;bsr $E22AEA
~         $60,00,00,22              ;bra.w $E20104

; aqueue: changed QUEUE_SIZE
20172+.d1 $30,3C,.WX_QUEUE_SIZE.W         ;move.w #$0500,d0

; rsc_read(): change dos_alloc -> wx_alloc()
2034C+.d1 $4E,B9,.WINXMISC+.BASE+D6.L       ;jsr $E34CE8

; sh_main(): new address for wm_start()
2100E+.d1 $4E,B9,.WINXWM+.BASE+FE4.L      ;jsr $E221B0

;
; replacements for all window manager functions
;
.WINXWM
+winxwm.fil              ;211CC - 230A4 (.7896)

; bb_fill(): insert call to wx_fill()
248B0+.d1 $61,00,.WXFILL-~.W              ;bsr $E25AA2

; gr_stilldn(): support for button modes
24D94+.d1 $4E,B9,.WINXWM+.BASE+1548.L     ;jsr $E22714

;
; wx_fill() function
;
.WXFILL
+wxfill.fil              ;25AA2 - 25B3C (9A)

; b_click(): remove test for gl_bpend
; (same as ARROWFIX)
261B8+.d1 $4E,71,4E,71,4E,71,4E,71  ;nop

; overwrite code of delay with a helper function for hctl_window
.WINXTICK
+winxtick.fil            ;262FA - 26310 (16)

; hd_keybd(): set msgbuff[5] to 0 for WM_ARROWED message
2E2B2+.d1 $42,6E,FF,F6              ;clr.w -10(a6)
~         $4E,71                    ;nop

;
; support new extended WM_ARROWED messages
; in deskmenu.c/do_scroll
;
.WINXSCRL
+winxscrl.fil            ;2E44E - 2E51A (CC)

;
; support WM_BOTTOM in deskmenu.c/hd_msg
;
.WINXBOTM
+winxbotm.fil            ;2EC72 - 2EC9A (28)
.WINXBOTM+3E $90,7C,00,21              ;sub.w #33,d0 /* WM_BOTTOM */
.WINXBOTM+54 $4E,71,4E,71              ;nop

;
; hd_msg(): send redraw messages instead of directly
; redrawing the windows, for better support of
; realtime window sizing
;
.WINXREDR
+winxredr.fil            ;2EFAC - 2F054 (A8)

;close_top(): eliminate call to get_top()
30ED2+.d2 $4E,71,4E,71,4E,71,4E,71  ;nop

;srl_hzbar: replace call to objc_draw() by do_redraw()
;this fixes a bug when drawing into background windows
34AE0+.d2 $42,67                    ;clr.w -(a7)
~         $48,6D,00,58              ;pea.l 88(a5)
~         $3F,2D,00,04              ;move.w 4(a5),-(a7)
~         $61,00,.do_redraw-~.W     ;bsr $E35A68

;
; replace for blt_window
; 
; helper functions:
; wx_alloc()
; wx_evinsert(), to insert callers of wm_update() at end of list
; wx_timchk(), for extra checks in ev_multi
;
.WINXMISC
+winxmisc.fil            ;34C12 - 34DBA (1A8)

;
; new make_top() function in deskwin.c
; to handle WM_BOTTOM message
;
.WINXTOP
+winxtop.fil             ;354C4 - 35508 (44)

; close_window(): patch call to make_top()
359DE+.d2 $4E,71,4E,71,4E,71,4E,71,4E,71
~         $42,97                    ;clr.l (a7)

; replace do_xyfix
.WINXXYFX
+winxxyfx.fil            ;35BA0 - 35C22 (82)

; replace unused graf_handle by a helper function to initialize the window colors
.WINXCOL
+winxcol.fil             ;35DC0 - 35DE8 (28)

; several tables
.WINXTAB
+winxtab.fil             ;3E18A - 3E298 (10E)

; new address for wm_get()
1AAE6+.d1 $4E,B9,.WINXWM+.BASE+10E8.L     ;jsr $E222B4
35F9E+.d2 $4E,B9,.WINXWM+.BASE+10E8.L     ;jsr $E222B4

; new address for wm_set()
1AB06+.d1 $4E,B9,.WINXWM+.BASE+1268.L     ;jsr $E22434
35FB4+.d2 $4E,B9,.WINXWM+.BASE+1268.L     ;jsr $E22434

; new address for wm_calc()
1AB84+.d1 $4E,B9,.WINXWM+.BASE+1486.L     ;jsr $E22652
35FCA+.d2 $4E,B9,.WINXWM+.BASE+1486.L     ;jsr $E22652

; new address for wm_create()
1AA8C+.d1 $4E,B9,.WINXWM+.BASE+C9C.L      ;jsr $E21E68
35F74+.d2 $41,F9,.WINXWM+.BASE+C9C.L      ;lea $E21E68,a0

; new address for wm_open()
1AAA6+.d1 $4E,B9,.WINXWM+.BASE+DAC.L      ;jsr $E21F78
35F8A+.d2 $41,F9,.WINXWM+.BASE+DAC.L      ;lea $E21F78,a0

; new address for wm_close()
1AAB8+.d1 $4E,B9,.WINXWM+.BASE+E38.L      ;jsr $E22004
35F4C+.d2 $41,F9,.WINXWM+.BASE+E38.L      ;lea $E22004,a0

; new address for wm_delete()
1AAC8+.d1 $4E,B9,.WINXWM+.BASE+E10.L      ;jsr $E21FDC
35F56+.d2 $41,F9,.WINXWM+.BASE+E10.L      ;lea $E21FDC,a0

; new address for wm_find()
1AB20+.d1 $4E,B9,.WINXWM+.BASE+13D2.L     ;jsr $E2259E
35F60+.d2 $41,F9,.WINXWM+.BASE+13D2.L     ;lea $E2259E,a0

; new address for wm_update()
1AB34+.d1 $4E,B9,.WINXWM+.BASE+1408.L     ;jsr $E225D4
1AE94+.d1 $4E,B9,.WINXWM+.BASE+1408.L     ;jsr $E225D4
1AE9C+.d1 $4E,B9,.WINXWM+.BASE+1408.L     ;jsr $E225D4
1B736+.d1 $4E,B9,.WINXWM+.BASE+1408.L     ;jsr $E225D4
1B75E+.d1 $4E,B9,.WINXWM+.BASE+1408.L     ;jsr $E225D4
1B854+.d1 $4E,B9,.WINXWM+.BASE+1408.L     ;jsr $E225D4
1B8E0+.d1 $4E,B9,.WINXWM+.BASE+1408.L     ;jsr $E225D4
1C808+.d1 $4E,B9,.WINXWM+.BASE+1408.L     ;jsr $E225D4
1C898+.d1 $4E,B9,.WINXWM+.BASE+1408.L     ;jsr $E225D4
24E88+.d1 $4E,B9,.WINXWM+.BASE+1408.L     ;jsr $E225D4
24EDE+.d1 $4E,B9,.WINXWM+.BASE+1408.L     ;jsr $E225D4
24EFC+.d1 $4E,B9,.WINXWM+.BASE+1408.L     ;jsr $E225D4
24F74+.d1 $4E,B9,.WINXWM+.BASE+1408.L     ;jsr $E225D4
35F6A+.d2 $41,F9,.WINXWM+.BASE+1408.L     ;lea $E225D4,a0

; new address for wm_new()
1AB92+.d1 $4E,B9,.WINXWM+.BASE+15B8.L     ;jsr $E22784
21178+.d1 $4E,B9,.WINXWM+.BASE+15B8.L     ;jsr $E22784
28056+.d1 $4E,B9,.WINXWM+.BASE+15B8.L     ;jsr $E22784

;***************************************************************************
;* end of Winx patch
