; optimized version of blt_window,
; to make room for the other functions
;blt_window:
~ $4e,56,ff,ca                  ; link      a6,#$FFCA
~ $48,e7,07,0c                  ; movem.l   d5-d7/a4-a5,-(a7)
~ $2a,6e,00,08                  ; movea.l   8(a6),a5
~ $3e,bc,01,00                  ; move.w    #$0100,(a7)
~ $4e,b9,.mice_state.L          ; jsr       $00E2F85A
~ $28,6d,00,60                  ; movea.l   96(a5),a4
~ $0c,6e,00,02,00,0c            ; cmpi.w    #2,12(a6)
~ $6c,32                        ; bge.s     bltw3
~ $30,2e,00,0e                  ; move.w    14(a6),d0
~ $c1,ed,00,72                  ; muls.w    114(a5),d0
~ $c1,fc,00,18                  ; muls.w    #$0018,d0
~ $34,34,08,12                  ; move.w    18(a4,d0.l),d2
~ $d4,74,08,16                  ; add.w     22(a4,d0.l),d2
~ $72,00                        ; moveq.l   #0,d1
~ $30,2e,00,0e                  ; move.w    14(a6),d0
~ $4a,6e,00,0c                  ; tst.w     12(a6)
~ $66,04                        ; bne.s     bltw1
~ $44,40                        ; neg.w     d0
~ $60,02                        ; bra.s     bltw2
;bltw1:
~ $44,42                        ; neg.w     d2
;bltw2:
~ $d1,6d,00,86                  ; add.w     d0,134(a5)
~ $7c,09                        ; moveq.l   #9,d6 /* WF_VSLIDE */
~ $2f,2d,00,86                  ; move.l    134(a5),-(a7)
~ $60,36                        ; bra.s     bltw6
;bltw3:
~ $74,00                        ; moveq.l   #0,d2
~ $30,2e,00,0e                  ; move.w    14(a6),d0
~ $c1,fc,00,18                  ; muls.w    #$0018,d0
~ $32,34,08,10                  ; move.w    16(a4,d0.l),d1
~ $d2,74,08,14                  ; add.w     20(a4,d0.l),d1
~ $30,2e,00,0e                  ; move.w    14(a6),d0
~ $0c,6e,00,03,00,0c            ; cmpi.w    #3,12(a6)
~ $66,04                        ; bne.s     bltw4
~ $44,40                        ; neg.w     d0
~ $60,02                        ; bra.s     bltw5
;bltw4:
~ $44,41                        ; neg.w     d1
;bltw5:
~ $d3,6c,00,10                  ; add.w     d1,16(a4)
~ $93,6c,00,14                  ; sub.w     d1,20(a4)
~ $d1,6d,00,82                  ; add.w     d0,130(a5)
~ $7c,08                        ; moveq.l   #8,d6 /* WF_HSLIDE */
~ $2f,2d,00,82                  ; move.l    130(a5),-(a7)
;bltw6:
~ $24,4c                        ; movea.l   a4,a2
~ $30,2d,00,04                  ; move.w    4(a5),d0
~ $c1,fc,01,22                  ; muls.w    #$0122,d0
~ $20,79,.D+5A.L                ; movea.l   $0000AEFC,a0 /* winxvars.wx_mem */
~ $d1,c0                        ; adda.l    d0,a0
~ $22,68,00,9e                  ; movea.l   158(a0),a1
~ $41,e8,00,18                  ; lea.l     24(a0),a0
~ $30,2d,00,04                  ; move.w    4(a5),d0
~ $42,67                        ; clr.w     -(a7)
~ $4e,b9,.WINX08+.BASE+886.L    ; jsr       $00E21A52
~ $54,8f                        ; addq.l    #2,a7
~ $32,1f                        ; move.w    (a7)+,d1
~ $30,1f                        ; move.w    (a7)+,d0
~ $48,c0                        ; ext.l     d0
~ $67,10                        ; beq.s     bltw7
~ $c3,fc,03,e8                  ; muls.w    #1000,d1
~ $2f,00                        ; move.l    d0,-(a7)
~ $2f,01                        ; move.l    d1,-(a7)
~ $4e,b9,.ldiv.L                ; jsr       $00E2575C
~ $50,8f                        ; addq.l    #8,a7
;bltw7:
~ $42,57                        ; clr.w     (a7)
~ $42,a7                        ; clr.l     -(a7)
~ $3f,00                        ; move.w    d0,-(a7)
~ $3f,06                        ; move.w    d6,-(a7)
~ $60,00,02,b2                  ; bra       $00E34F98

;wx_alloc:
~ $20,40                        ; movea.l   d0,a0
~ $2f,08                        ; move.l    a0,-(a7)
~ $48,68,5a,74                  ; pea.l     23156(a0)
~ $3f,3c,00,48                  ; move.w    #$0048,-(a7)
~ $4e,41                        ; trap      #1
~ $5c,4f                        ; addq.w    #6,a7
~ $41,f9,.D+50.L                ; lea.l     $0000AEF2,a0
~ $43,fa,00,38                  ; lea.l     winxvers(pc),a1
~ $20,d9                        ; move.l    (a1)+,(a0)+
~ $20,d9                        ; move.l    (a1)+,(a0)+
~ $30,d9                        ; move.w    (a1)+,(a0)+
~ $20,9f                        ; move.l    (a7)+,(a0)
~ $d1,98                        ; add.l     d0,(a0)+
~ $2f,00                        ; move.l    d0,-(a7)
~ $43,fa,00,32                  ; lea.l     winxinfo(pc),a1
~ $20,c9                        ; move.l    a1,(a0)+
~ $20,3c,57,49,4e,58            ; move.l    #'WINX',d0
~ $61,46                        ; bsr.s     getcookie
~ $20,c0                        ; move.l    d0,(a0)+
~ $41,f9,.D+50.L                ; lea.l     $0000AEF2,a0  /* winxvars */
~ $70,01                        ; moveq.l   #1,d0
~ $4e,b9,.WINX08+.BASE+258.L    ; jsr       wx_callfunc
~ $67,06                        ; beq.s     wx_alloc1
~ $33,c0,.D+58.L                ; move.w    d0,$0000AEFA /* winxvars.global_flags */
;wx_alloc1:
~ $20,1f                        ; move.l    (a7)+,d0
~ $4e,75                        ; rts
;winxvers:
~ $57,49,4e,58                  ; dc.b 'WINX'
~ $.WX_VERSION.W                ; dc.w $220
~ $.WX_DATE.W                   ; dc.w $1b51 /* 1993/10/17 */
~ $.GLOBAL.W                    ; dc.w $1fff /* global flags */

;winxinfo:
~ $.D+5A.L                      ; dc.l D+$5A /* winxvars.wx_mem */
~ $00,28                        ; dc.w WX_MAXWIN
~ $01,22                        ; dc.w 290 /* sizeof(WX_WINDOW) */
~ $.rlr.L                       ; dc.l rlr
~ $00,90                        ; dc.w $0090
~ $05,00                        ; dc.w WX_QUEUE_SIZE
~ $.gl_newdesk.L                ; dc.l gl_newdesk
~ $.gl_newroot.L                ; dc.l gl_newroot
~ $.ad_stdesk.L                 ; dc.l ad_stdesk
~ $.WINX08+.BASE+BEE.L          ; dc.l .WINX08+BEE

;getcookie:
~ $2f,08                        ; move.l    a0,-(a7)
~ $20,78,05,a0                  ; movea.l   ($000005A0).w,a0
~ $22,08                        ; move.l    a0,d1
~ $67,10                        ; beq.s     getcook3
;getcook1:
~ $22,18                        ; move.l    (a0)+,d1
~ $67,0c                        ; beq.s     getcook3
~ $b0,81                        ; cmp.l     d1,d0
~ $67,04                        ; beq.s     getcook2
~ $58,88                        ; addq.l    #4,a0
~ $60,f4                        ; bra.s     getcook1
;getcook2:
~ $20,10                        ; move.l    (a0),d0
~ $60,02                        ; bra.s     getcook4
;getcook3:
~ $70,00                        ; moveq.l   #0,d0
;getcook4:
~ $20,5f                        ; movea.l   (a7)+,a0
~ $4e,75                        ; rts

;wx_evinsert
~ $20,5f                        ; movea.l   (a7)+,a0
~ $22,6e,00,0c                  ; movea.l   12(a6),a1
~ $5c,89                        ; addq.l    #6,a1
;wx_evi1:
~ $4a,91                        ; tst.l     (a1)
~ $67,06                        ; beq.s     wx_evi2
~ $22,51                        ; movea.l   (a1),a1
~ $58,89                        ; addq.l    #4,a1
~ $60,f6                        ; bra.s     wx_evi1
;wx_evi2:
~ $2e,89                        ; move.l    a1,(a7)
~ $4e,d0                        ; jmp       (a0)

;wx_timchk:
~ $66,1e                        ; bne.s     wx_tim2
~ $20,79,.rlr.L                 ; movea.l   $0000E54A,a0
~ $22,79,.ad_windspb.L          ; movea.l   $00008F7E,a1
~ $b1,e9,00,02                  ; cmpa.l    2(a1),a0
~ $67,08                        ; beq.s     wx_tim1
~ $4a,39,.D+6E.L                ; tst.b     $0000AF10
~ $66,04                        ; bne.s     wx_tim1
;wx_tim1:
~ $8a,7c,00,20                  ; or.w      #$0020,d5 ; MU_TIMER
;wx_tim2:
~ $4e,75                        ; rts
