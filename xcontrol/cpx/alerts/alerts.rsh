#define T0OBJ 0
#define FREEBB 0
#define FREEIMG 0
#define FREESTR 0

BYTE *rs_strings[] = {
0};

LONG rs_frstr[] = {
0};

BITBLK rs_bitblk[] = {
0};

LONG rs_frimg[] = {
0};

ICONBLK rs_iconblk[] = {
0};

TEDINFO rs_tedinfo[] = {
0};

OBJECT rs_object[] = {
-1, 1, 1, G_BOX, NONE, NORMAL, 0x1141L, 0,0, 32,11,
0, -1, -1, G_IBOX, 0x60, NORMAL, 0x1100L, 0,0, 32,11};

LONG rs_trindex[] = {
0L};

struct foobar {
	WORD	dummy;
	WORD	*image;
	} rs_imdope[] = {
0};

#define NUM_STRINGS 0
#define NUM_FRSTR 0
#define NUM_IMAGES 0
#define NUM_BB 0
#define NUM_FRIMG 0
#define NUM_IB 0
#define NUM_TI 0
#define NUM_OBS 2
#define NUM_TREE 1

BYTE pname[] = "ALERTS.RSC"; 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x7D, 0xFEF8, 
0x0, 0x0, 0x1C07, 0xFFFF, 
0x180, 0x0, 0x0, 0x0, 
0x0, 0x7D, 0xFEF8, 0x0, 
0x0, 0x3F07, 0xFFFF, 0x3E0, 
0x7F, 0xF00F, 0x8C00, 0x0, 
0x7D, 0xFEF8, 0x0, 0x0, 
0x7F07, 0xFFFF, 0x7F0, 0x1FF, 
0xF80F, 0x9E00, 0x0, 0x7D, 
0xFEF8, 0x0, 0x0, 0x7F87, 
0xFFFF, 0xFF0, 0x1FF, 0xFE0F, 
0x9E00, 0x0, 0x7D, 0xFEF8, 
0x0, 0x0, 0xFF87, 0xFFFF, 
0xFF0, 0x1FF, 0xFF0F, 0x8800, 
0x0, 0x7D, 0xFEF8, 0x0, 
0x0, 0xFF87, 0xFFFF, 0xFF8, 
0x3FF, 0xFF0F, 0x8000, 0x0, 
0x7D, 0xFEF8, 0x0, 0x0, 
0xFFC0, 0xF80, 0xFF8, 0x3F0, 
0x7F8F, 0x8000, 0x0, 0x7D, 
0xFEF8, 0x0, 0x0, 0xFFC0, 
0xF80, 0x1FF8, 0x3F0, 0x3F8F, 
0x8000, 0x0, 0x7D, 0xFEF8, 
0x0, 0x1, 0xFFC0, 0xF80, 
0x1FF8, 0x3F0, 0x1F8F, 0x8000, 
0x0, 0x7D, 0xFEF8, 0x0, 
0x1, 0xF7E0, 0xF80, 0x3FFC, 
0x3F0, 0xF8F, 0x8000, 0x0, 
0x7D, 0xFEF8, 0x0, 0x1, 
0xF7E0, 0xF80, 0x3FFC, 0x3F0, 
0xF8F, 0x8000, 0x0, 0x7D, 
0xFEF8, 0x0, 0x3, 0xF7E0, 
0xF80, 0x3E7E, 0x3F0, 0xF8F, 
0x8000, 0x0, 0x7D, 0xFEF8, 
0x0, 0x3, 0xF3E0, 0xF80, 
0x3E7E, 0x3F0, 0x1F8F, 0x8000, 
0x0, 0x7D, 0xFEF8, 0x0, 
0x3, 0xE3F0, 0xF80, 0x7E7E, 
0x3F0, 0x1F8F, 0x8000, 0x0, 
0x7D, 0xFEF8, 0x0, 0x3, 
0xE3F0, 0xF80, 0x7E3E, 0x3F0, 
0x7F0F, 0x8000, 0x0, 0x7D, 
0xFEF8, 0x0, 0x7, 0xE1F0, 
0xF80, 0x7C3F, 0x3F1, 0xFF0F, 
0x8000, 0x0, 0x7D, 0xFEF8, 
0x0, 0x7, 0xC1F8, 0xF80, 
0xFC3F, 0x3F3, 0xFE0F, 0x8000, 
0x0, 0x7D, 0xFEF8, 0x0, 
0xF, 0xC1F8, 0xF80, 0xFC1F, 
0x3F7, 0xFC0F, 0x8000, 0x0, 
0x7D, 0xFEF8, 0x0, 0xF, 
0xC1F8, 0xF80, 0xF81F, 0x3F7, 
0xF80F, 0x8000, 0x0, 0xFD, 
0xFEF8, 0x0, 0xF, 0xFFF8, 
0xF80, 0xFFFF, 0x83F7, 0xE00F, 
0x8000, 0x0, 0xFD, 0xFEF8, 
0x0, 0xF, 0xFFFC, 0xF81, 
0xFFFF, 0x83F7, 0xE00F, 0x8000, 
0x0, 0xFD, 0xFEF8, 0x0, 
0x1F, 0xFFFC, 0xF81, 0xFFFF, 
0x83F3, 0xF00F, 0x8000, 0x0, 
0x1FD, 0xFEFC, 0x0, 0x1F, 
0xFFFC, 0xF81, 0xFFFF, 0xC3F3, 
0xF00F, 0x8000, 0x0, 0x1F9, 
0xFEFC, 0x0, 0x1F, 0xFFFE, 
0xF83, 0xFFFF, 0xC3F1, 0xF80F, 
0x8000, 0x0, 0x1F9, 0xFEFC, 
0x0, 0x1F, 0x7E, 0xF83, 
0xF00F, 0xC3F1, 0xFC0F, 0x8000, 
0x0, 0x1F9, 0xFEFE, 0x0, 
0x3F, 0x3E, 0xF83, 0xE007, 
0xE3F0, 0xFC0F, 0x8000, 0x0, 
0x3F9, 0xFE7E, 0x0, 0x3E, 
0x3E, 0xF87, 0xE007, 0xE3F0, 
0x7E0F, 0x8000, 0x0, 0x3F9, 
0xFE7F, 0x0, 0x3E, 0x3F, 
0xF87, 0xC007, 0xE3F0, 0x3E0F, 
0x8000, 0x0, 0x7F1, 0xFE7F, 
0x0, 0x7E, 0x3F, 0xF87, 
0xC003, 0xF3F0, 0x3F0F, 0x8000, 
0x0, 0xFF1, 0xFE7F, 0x8000, 
0x7C, 0x1F, 0x8F87, 0xC003, 
0xF3F0, 0x1F8F, 0x8000, 0x0, 
0xFF1, 0xFE3F, 0x8000, 0x7C, 
0x1F, 0x8F8F, 0xC001, 0xF3F0, 
0x1FCF, 0x8000, 0x0, 0x1FE1, 
0xFE3F, 0xC000, 0xFC, 0x1F, 
0x8F8F, 0x8001, 0xFBF0, 0xFCF, 
0x8000, 0x0, 0x3FE1, 0xFE3F, 
0xE000, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x3FE1, 0xFE1F, 0xF000, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x7FC1, 0xFE1F, 0xF000, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0xFFC1, 
0xFE0F, 0xF800, 0xF, 0xFE0, 
0x7007, 0x3E38, 0xFFF, 0xBF9C, 
0x0, 0x1, 0xFF81, 0xFE0F, 
0xFC00, 0x3F, 0x1FF8, 0x780F, 
0x7F38, 0xFFF, 0xFFBF, 0x8000, 
0x3, 0xFF81, 0xFE07, 0xFE00, 
0xFF, 0x3FFC, 0x780F, 0x7FB8, 
0xFFF, 0xFFFF, 0xC000, 0xF, 
0xFF01, 0xFE07, 0xFF80, 0xF0, 
0x781E, 0x780F, 0x73B8, 0xE38, 
0x7071, 0xC000, 0x1F, 0xFE01, 
0xFE03, 0xFFC0, 0x1C0, 0xE00E, 
0x7C1F, 0x71F8, 0xE38, 0x7071, 
0xC000, 0x7F, 0xFC01, 0xFE01, 
0xFFF0, 0x1C0, 0xE007, 0x7C1B, 
0x71F8, 0xE38, 0x7070, 0xC000, 
0xFF, 0xFC01, 0xFE00, 0xFFF8, 
0x380, 0xC007, 0x6C1B, 0x71B8, 
0xE38, 0x7071, 0xC000, 0x7FF, 
0xF001, 0xFE00, 0x7FFF, 0x381, 
0xC003, 0x6E3B, 0x7FB8, 0xE38, 
0x7F77, 0xC000, 0x3FFF, 0xE001, 
0xFE00, 0x3FFF, 0xE381, 0xC003, 
0x6E33, 0x7F38, 0xE38, 0x7F77, 
0x8000, 0x3FFF, 0xC001, 0xFE00, 
0x1FFF, 0xE381, 0xC007, 0x6673, 
0x7E38, 0xE38, 0x7F76, 0x0, 
0x3FFF, 0x8001, 0xFE00, 0xFFF, 
0xE380, 0xE007, 0x6773, 0x7038, 
0xE38, 0x7077, 0x0, 0x3FFE, 
0x1, 0xFE00, 0x3FF, 0xE1C0, 
0xE007, 0x6763, 0x7038, 0xE38, 
0x7077, 0x8000, 0x3FFC, 0x1, 
0xFE00, 0x1FF, 0xE1E0, 0xF00E, 
0x6363, 0x7038, 0x1C38, 0x7073, 
0x8000, 0x3FF0, 0x1, 0xFE00, 
0x7F, 0xE0F0, 0x783E, 0x63E3, 
0x703C, 0x3C38, 0x7071, 0xC000, 
0x3FC0, 0x1, 0xFE00, 0x1F, 
0xE07F, 0x3FFC, 0x63C3, 0x701F, 
0xF838, 0x7FF1, 0xC000, 0x3E00, 
0x1, 0xFE00, 0x7, 0xE03F, 
0x1FF8, 0x61C3, 0x700F, 0xF038, 
0x7FF0, 0xE000, 0x0, 0x0, 
0x0, 0x0, 0x2003, 0x3C0, 
0x6183, 0x7007, 0xE038, 0x3FF0, 
0x7000, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0};

LONG rs_frstr[] = {
0};

BITBLK rs_bitblk[] = {
0L, 22, 78, 0, 0, 1};

LONG rs_frimg[] = {
0};

ICONBLK rs_iconblk[] = {
0};

TEDINFO rs_tedinfo[] = {
0L, 1L, 2L, 5, 6, 0, 0x1180, 0x0, -1, 30,1,
3L, 4L, 5L, 5, 6, 0, 0x1180, 0x0, -1, 18,1,
6L, 7L, 8L, 3, 6, 0, 0x1180, 0x0, -1, 7,12,
9L, 10L, 11L, 3, 6, 0, 0x1180, 0x0, -1, 7,12,
12L, 13L, 14L, 3, 6, 0, 0x1180, 0x0, -1, 7,12,
15L, 16L, 17L, 3, 6, 0, 0x1180, 0x0, -1, 7,12};

OBJECT rs_object[] = {
-1, 1, 5, G_BOX, NONE, NORMAL, 0x1100L, 0,0, 32,11,
5, 2, 4, G_BOX, NONE, NORMAL, 0xFF1100L, 259,769, 1305,1288,
3, -1, -1, G_IMAGE, NONE, NORMAL, 0x0L, 1025,2304, 789,3588,
4, -1, -1, G_TEXT, NONE, NORMAL, 0x0L, 1025,2309, 1046,1,
1, -1, -1, G_TEXT, NONE, NORMAL, 0x1L, 262,1542, 1293,3072,
0, 6, 9, G_IBOX, TOUCHEXIT, NORMAL, 0x1100L, 0,0, 32,11,
7, -1, -1, G_FTEXT, EDITABLE, NORMAL, 0x2L, 1025,0, 11,1,
8, -1, -1, G_FTEXT, EDITABLE, NORMAL, 0x3L, 1536,10, 11,1,
9, -1, -1, G_FTEXT, EDITABLE, NORMAL, 0x4L, 21,0, 11,1,
5, -1, -1, G_FTEXT, 0x28, NORMAL, 0x5L, 21,10, 11,1};

LONG rs_trindex[] = {
0L};

struct foobar {
	WORD	dummy;
	WORD	*image;
	} rs_imdope[] = {
0, &IMAG0[0]};

#define NUM_STRINGS 18
#define NUM_FRSTR 0
#define NUM_IMAGES 1
#define NUM_BB 1
#define NUM_FRIMG 0
#define NUM_IB 0
#define NUM_TI 6
#define NUM_OBS 10
#define NUM_TREE 1

BYTE pname[] = "SAMPLE.RSC";